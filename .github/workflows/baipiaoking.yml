name: Debugging with SSH
on: 
  watch:
    types: [started]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v1
 
     - name: Try Build
       run: ./not-exist-file.sh it bloke build
 
     - name: Start SSH via Ngrok
       if: ${{ failure() }}
       run: curl -sL https://gist.githubusercontent.com/retyui/7115bb6acf151351a143ec8f96a7c561/raw/7099b9db76729dc5761da72aa8525f632d8875c9/debug-github-actions.sh | bash
       env:
        # After sign up on the https://ngrok.com/
        # You can find this token here: https://dashboard.ngrok.com/get-started/setup
        NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}
 
        # This password you will use when authorizing via SSH 
        USER_PASS: ${{ secrets.USER_PASS }}
 
     - name: aria2-pro
       run: |
         docker run -d --name aria2-pro  --restart unless-stopped --log-opt max-size=1m --network host -e PUID=$UID -e PGID=$GID  -e RPC_SECRET=1887415157 -e RPC_PORT=6800 -e LISTEN_PORT=6888  -e SPECIAL_MODE=rclone -v ~/aria2-config:/config -v ~/aria2-downloads:/downloads p3terx/aria2-pro
         wget -O ~/aria2-config/rclone.conf https://baipiaoking.ml/0:/config/rclone.conf
     - name: tele-bot
       run: |
         wget -O ~/.tele-aria2-conf.json https://baipiaoking.ml/0:/config/.tele-aria2-conf.json
         docker run -d  --name tele-aria2  --restart unless-stopped  --log-opt max-size=1m  --network host    -v ~/.tele-aria2-od-conf.json:/config.json    p3terx/tele-aria2:0.2.2
         docker restart aria2-pro
     - name: Don't kill instace
       if: ${{ failure() }}
       run: sleep 6h # Prevent to killing instance after failure
